https://www.jianshu.com/p/6b2e65db5e54












在面试时，应当综合准备 java Core，数据库，框架，分布式等方面的题目。根据我面试的结果，我发现不少候选人走了弯路，他们或者干脆不准备，准备时可能方法不到位，单准备一个方面。比如只准备了算法题，在这方面回答很好，但其它方面就一无所知了。

所以说，没有所谓的一定能成功的面试秘籍，但有可以帮助提升成功率的准备方法。



切记，面试前一定得准备，否则成功的可能性很低，准备时，得综合看各方面的点。至于每个点要到什么程度，后文会讲到。

三、架构方面需要准备的点
 初级开发而言，需要让面试官感觉出如下的要点。
 熟悉SSM架构，至少在项目里做过。这个的说法是，介绍项目时，用一个业务流程来说spring mvc如何做的。

知道Spring MVC中的细节，比如@Autowired的用法，如何把url映射到Controller上，ModelAndView对象返回的方式等。

最好结合项目的用法，说下你是怎么用AOP，拦截器的，比如说可以通过拦截器拦截非法请求，怎么用 AOP输出日志等。

 关于ORM方面，不限用过哪种，但得知道一对一，一多多，多对多等的用法，以及cascade和inverse的用法。

 最好知道声明式事务的做法。

如果你要应聘高级开发，那在上述基础上，最好了解如下的知识点：

Spring Bean的周期

最好能通过阅读源代码，说下IOC,AOP以及Spring MVC的工作流程

最好能结合反射，说下IOC等的实现原理。

Spring Boot和Spring Cloud的一些知识点。

四、数据库方面需要准备的点
不少候选人会看很多SQL的技巧，比如select该怎么写，insert又该怎么写，但仅限于此，不会再准备其它的。

这样就很吃亏，因为面试官会认为，哪怕是初级开发，SQL语句也该会写，所以这块不会多问，而会问如下方面的问题。

索引怎么建的，怎么用的？比如我建好了一个索引，在where 语句里写 name like '123%'会不会走索引，怎么情况下不该建索引，哪些语句不会走索引。

除了索引之外，你有过哪些SQL优化方面的经验，比如分库分表，或通过执行计划查看SQL的优化点。这最好是能结合你做的项目实际来讲。

这里，我面试下来，大概有70%的候选人只知道基本SQL的写法，所以哪怕你是只有理论经验，会说一些优化点，也是非常有利的。

这块对于高级开发而言，更得了解优化方面的技能。

五、Java  Core方面需要准备的点
 这块是基础，其实很多问的问题，候选人一定会在项目里用到，但很少能说好说全。

这块主要会从集合，多线程，异常处理流程以及JVM虚拟机这些方面来问。



集合方面

    1 hashcode有没有重写过？在什么场景下需要重写。如果可以，结合hash表的算法，说下hashmap的实现原理。

    对于高级开发而言，最好通过ConcurrentHashMap来说明下并发方面的底层实现代码。

    2 ArrayList，LinkedList的差别，比如一个基于数组，一个基于链表，它们均是线程不安全的，ArrayList的扩容做法等。

    对于高级而言，最好看下底层的代码。

    3 Set如何实现防重的，比如TreeSet和HashSet等。

    4 Collection的一些方法，比如比较方法，包装成线程安全的方法等。

    5 可能有些面试官会问，如何通过ArrayList实现队列或堆栈，这个可以准备下。



多线程方面，其实在项目里不怎么会用到，但会问如下的问题

    1 synchronized和可重入锁的差别，然后可能会顺便问下信号量等防并发的机制。

    2 在线程里该如何返回值，其实就是callable runnable 区别。

    3 一定得通过ThreadLocal或volatile关键字，来说明线程的内存模型。

    4 线程池方面，会用，了解些常用参数

    线程方面，可能问得比较多的就是并发机制，如果是高级开发，可能会问得深些。



虚拟机方面

    1 结构图和流程可以大致说下。

    2 一定得了解针对堆的垃圾回收机制，具体而言，可以画个图，说下年轻代年老代等。

    3 说下垃圾回收的流程，然后针对性地说下如何在代码中优化内存性能。

    4 最好说下如果出现了OOM异常，该怎么排查？如何看Dump文件。

    5 GC的一些概念，比如强弱软引用，finalize方法等，这些可以准备下。

六、算法、设计模式等，其实是虚的
这块好准备，不过话说哪怕这些没回答好，但能证明有相关技能的项目经验，一般也会让过。
不过在这块，不少候选人就本末倒置了，比如就准备算法，设计模式，刚才提到的框架，数据库和Java Core方面就不准备了。这样很吃亏，就好比考政治只复习了一个点，其它一点也不准备。

七、面试的感受&听到哪类回答就能证明候选人比较资深
1 .大多数的候选人（大概7成）直接就来了，不做任何准备。要知道，面试和项目其实有些脱节，哪怕项目做得再好，不做准备照样通不过，只要我确认过这类人确实无法达标，我拒掉他们没任何心理负担，谁让他们不准备？
2 .还有些候选人态度很好，明显准备过，但没准备到位，比如像刚才所说，只准备了算法，或者在Java Core方面，只看了集合方面的面试题。对于这些同学，哪怕是过了，我也会感到惋惜，毕竟如果面试好些的话，工资也能更高些，至于哪些过不了的，我敢说，如果他们准备过，估计就不是这个结果了。

其实我也知道，人无完人，哪怕我自己去面试，也不可能面面俱到，所以，我不会要求候选人什么问题都能回答出，甚至大多答错也没关系，只要能证明自己的能力即可通过面试。

我也和不少面试官交流过，根据我们的经验，如果候选人能说出如下的知识点，即能证明他在这个领域比较资深了，在这块，我可能就不会过多地问问题了。




架构方面

能证明自己可以干活（这不难），同时能结合底层代码说出IOC，AOP或Spring MVC的流程，只要能说出一个即可。或者能说出拦截器，Controller等的高级用法。

能证明自己有Spring Boot或Spring Cloud的经验，比如能说出些Spring Cloud组件的用法。

如果能证明自己有分布式开发的经验，那最好了，其实这不难证明，比如能说出服务的包是放在多台机器上（大多数公司其实都这样），而且能说出如何部署，如何通过nginx等做到负载均衡。


数据库方面

数据库方面，其实讲清楚一个问题即可：如何进行SQL调优，比如通过索引，看执行计划即可，如果有其它的优化点，说清楚即可。


 Java Core方面

Java Core方面，这里给出些诀窍：

能结合ConcurrentHashMap的源代码，说出final,volatile,transient的用法，以及在其中如何用Lock对象防止写并发。

结合一个项目实际，说下设计模式的实践。

多线程方面，能说出Lock或volatile等高级知识点的用法。

这块最取巧：说下GC的流程，以及如何通过日志和Dump文件排查OOM异常，如果再高级些的话，说下如何在代码中优化内存代码。

诀窍点归结成一个：能结合源代码或项目实际，说出些比较资深的问题。

JAVA

HashMap相关
HashMap一直是经典的面试题，所有面试官都喜欢问他，因为它可以牵扯出非常多的知识点，而面试者到底能了解到何种程度，则一定程度反映其综合能力。

细节聊扩容因子LoadFactor=0.75，初始大小InitailCapacity=16

纵向聊其底层实现，数据结构是数组+链表，提到jdk1.8之后对链表节点到达8之后转换为红黑树加分。继续追问的话便是引申出常用的数据结构：队列，栈，树，图。

横向聊线程安全，HashMap为线程不安全，一般问多线程操作会导致其死循环的原因。与线程安全的ConcurrentHashMap对比，又扩展到ConcurrentHashMap的实现。继续追问的话便是引申出线程安全的定义，问一些常用的并发容器，考察面试者对java.util.concurrent包的掌握情况。那么至少可以牵扯出如下的问题：

ConcurrentHashMap相关
面试者可以先说历史，1.8之前采用分段锁，核心就是一句话：尽量降低同步锁的粒度。1.8之后使用CAS思想代替冗杂的分段锁实现。不出意料，面试者答出CAS之后必定会被追问其思想以及应用，换做我自己的话会有如下思路作答：CAS采用乐观锁思想达到lock free，提一下sun.misc.Unsafe中的native方法，至于CAS的其他应用可以聊一聊Atomic原子类和一些无锁并发框架（如Amino），提到ABA问题加分。

线程安全与锁
线程安全这个词也是面试的高频词，说完上面的并发容器，回头说一说线程安全的定义，按照周志明大大的话回答私以为是极好的：

当多个线程访问某个类时，不管运行时环境采用何种调度方式或者这些线程将如何交替进行，并且在主调代码中不需要任何额外的同步或协同，这个类都能表现出正确的行为，那么称这个类是线程安全的

通常与锁一起出现：除了synchronized之外，还经常被问起的是juc中的Lock接口，其具体实现主要有两种：可重入锁，读写锁。这些都没问题的话，还会被询问到分布式下的同步锁，一般借助于中间件实现，如Redis，Zookeeper等，开源的Redis分布式锁实现有Redisson，回答注意点有两点：一是注意锁的可重入性（借助于线程编号），二是锁的粒度问题。除此之外就是一些juc的常用工具类如：CountdownLatch，CyclicBarrir，信号量

线程
创建线程有几种方式：这个时候应该毫不犹豫的回答1种。面试官会有些惊讶于你的回答，因为似乎他已经习惯了听到Thread和Runnable2种方式的“标准答案”。其实，仔细审题会发现，java创建线程只有一种方式：Thread。Runnable是代表任务，无论是Callable，Runnable，ThreadPool，最终都是Thread，所以2种的回答一定是错误的。

设计模式
如经典的单利模式。当被问到单例模式时，私以为在有准备的前提下，回答使用双检锁的方式实现可以很好地诱导面试官。双检锁实现线程安全的单利模式有两块注意点：1锁的粒度问题 2 静态变量需要被volatile修饰。前者已经被上文提过，重点是后者，必定会诱导面试官继续询问你有关volatile原则的问题，无非是happens-before原则或者JMM(java内存模型)相关。前者只需要熟记几条关键性的原则即可，而后者回答的重点便是需要提到主存与工作内存的关系。

工厂模式，观察者模式，模板方法模式，策略模式，职责链模式等等，通常会结合Spring和UML类图提问。

JVM相关
说实话，我自己对JVM的掌握几乎完全来自于《深入理解java虚拟机》，加上一点点线上的经验。初级岗位常问的问题也是固定的那么几个。

内存分区：主要就是堆和栈，严谨点回答可以答方法区，虚拟机栈，本地方法栈，堆，程序计数器。聊一聊Hotspot在jdk1.7中将常量池移到了堆中，jdk1.8移除永久代用MetaSpace代替起码可以佐证：你喜欢在一些JAVA群里面吹水。

垃圾回收算法：新生代由于对象朝生夕死使用标记-清除(or标记-整理)算法，老年代生命力强使用复制算法。提到一句分代收集即可。

垃圾回收器一两个名字还是得叫的上来：Serial，Parallel，CMS，G1…

如何判断一个对象可以被回收：引用计数（可以提到Netty中的使用案例），可达性分析（JVM使用）

IO相关
bio，nio区别要熟知，了解nio中的ByteBuffer，Selector，Channel可以帮助面试者度过不少难关。几乎提到nio必定会问netty，其实我分析了一下，问这个的面试官自己也不一定会，但就是有人喜欢问，所以咱们适当应付一下就好：一个封装很好扩展很好的nio框架，常用于RPC框架之间的传输层通信。

反射
聊一聊你对JAVA中反射的理解：运行时操作一个类的神器，可以获取构造器，方法，成员变量，参数化类型…使用案例如Hibernate，BeanUtils。

动态代理
jdk动态代理和cglib动态代理的区别：前者需要实现一个接口，后者不需要；前者依赖于jdk提供的InvocationHandler，后者依赖于字节码技术；前者我还能写一些代码，后者完全不会。大概就这些差别了。

开源框架

Tomcat

我没看过源码，除了老生常谈的双亲委托类加载机制，似乎只能问一些相关参数了。

Spring

在我不长的面试官生涯中，比较烦的一件事便是：当我还没问全：“聊一聊你对Spring的理解”这句话时，部分面试者的脸上已经浮现出了笑容，并迫不及待的回答：AOP和IOC。这本无可厚非，但一旦这成了条件反射式的回答，便违背了面试的初衷。

在面试中，Spring从狭义上可以被理解成Spring Framework&SpringMVC。而广义上包含了Spring众多的开源项目，如果面试者连spring.io都没有访问过，私以为是不应该的扣分项。

Spring常见的问题包括：Spring Bean的scope取值，BeanFactory的地位，@Transactionl相关（传播机制和隔离级别），SpringMVC工作流程

SpringBoot

SpringBoot是当今最火的框架之一了，其starter模块自动配置的思想是面试中经常被问到的。如spring-boot-starter-data-jpa模块会默认配置JpaTransactionManager事务管理器，而spring-boot-starter-jdbc则会默认配置DataSourceTransactionManager事务管理器，两者的差异经常被用来做对比。@ConditionalOnMissingBean，@ConditionalOnBean等注解作用也需要被掌握。

JPA&Hibernate

ORM的思想

懒加载如何配置以及意义

级联如何配置，什么时候应该使用级联

一级缓存：Session级别的缓存

@Version的使用：数据库的乐观锁

数据库

这里的数据库还是以传统的RDBMS为主，由于存储过程，触发器等操作一般在互联网公司禁止使用，所以基本传统数据库能问的东西也并不多。

索引的分类有哪些？面试者可以尝试自己分类回答。索引和唯一索引；聚集索引和非聚集索引；数据结构可以分为Hash和B+树索引；单列索引和联合索引。常见的索引问题还包括（A,B,C）的联合索引，查询(B,C)时会不会走索引等一些数据库的小细节。
事务ACID的描述和隔离级别。
mysql的explain查询分析也是面试的重点对象，一条分析结果的查询时间，影响行数，走了哪些索引都是分析的依据。
如果面试官问到存储引擎，说实话也有点为了面试而面试的感觉，掌握基本的InnoDB和Myisam的区别即可。
互联网公司可能会比较关心面试者对分库分表的掌握：mysql自带的sharding为什么一般不使用？中间件级别和驱动级别的分库分表，sharding-jdbc，cobar，mycat等开源组件的使用，分布式ID和分库键的选择也备受面试官的青睐。
Redis

这个的确很热，这年头不熟悉Redis真不好意思说自己是干互联网的。

Redis的常用数据结构，这不用赘述了。
Redis的持久化策略。了解RDB和AOF的使用场景即可。
Redis的发布订阅。
列举Redis的使用场景。这个可以自由发挥，除了主要功能缓存之外，还包括session共享，基于Redis的分布式锁，简易的消息队列等。
了解Redis的集群和哨兵机制。
高级话题包括：缓存雪崩，缓存失效，缓存穿透，预热等。
MQ

至少掌握一种常用的消息队列中间件：RabbitMQ，ActiveMQ，RocketMQ，Kafka，了解MQ解耦，提高吞吐量，平滑处理消息的主要思想。常见的面试问题包括如下几点：

列举MQ在项目中的使用场景
消息的可靠投递。每当要发生不可靠的操作（如RPC远程调用之前或者本地事务之中），保证消息的落地，然后同步发送。当失败或者不知道成功失败（比如超时）时，消息状态是待发送，定时任务轮询待发送消息表，最终一定可以送达。同时消费端保证幂等。也有朋友告诉过我RocketMQ中事务消息的概念，不过没有深入研究。
消息的ACK机制。如较为常用的事务机制和客户端ACK。
DLQ的设计。
Nginx

解释反向代理。
常用的负载均衡算法。掌握ip_hash ，轮询，weight，fair即可。
配置动静分离。
RPC框架

Dubbo，Motan等主流rpc框架的设计思想也是面试中宠儿。

说一说RPC的原理？可初步回答动态代理+网络通信，进一步补充RPC的主要分层：协议层，序列化层，通信层，代理层。每一层拉出来都可以被问很久：如序列化方式的选择，通信层的选择等。
注册中心的作用和选择。Zookeeper，Consul，Eureka等注册中心完成了什么工作，以及他们的对比。
netty相关的提问。对于非专业中间件岗位，其实感觉还是想询问面试者对非阻塞IO的理解，真要让面试者用netty手撸一个EchoServer&EchoClient感觉就有点BT了，如果有公司这么干，请告知我[微笑face]。
SpringCloud

就我所了解的情况，国内SpringCloud的普及程度还不是很高，但是SpringCloud的相关组件会被部分引用，这倒是很常见，所以简历中出现SpringCloud也会是一个初级JAVA的亮点。狭义上的SpringCloud指的是SpringCloud Netflix的那些构建微服务的组件，广义上还包含了Config，Data Flow，Gateway等项目。

Feign，Ribbon，Eureka，Zuul的使用。了解各个组件的作用，会问一些常遇到的问题如Feign的重试机制，Eureka的保护机制，Zuul的路由机制等。
Spring Cloud使用的restful http通信与RPC通信的对比。毕竟…这是一个经久不衰的辩题，可以从耦合性，通信性能，异构系统的互信等角度对比。
分布式

CAP和BASE原理。了解CAP只能同时保证两个的结论，以及CP和AP的选择依据。了解BASE的最终一致性原理。
重试和幂等性。如在支付场景中的异步支付回调，内外部系统对接保证一致性通常采取的保障手段。
分布式链路跟踪。Dapper论文的掌握，Trace,Span,Annotation，埋点等基本概念的含义，有过Zipkin，Spring Cloud Slueth的使用经验自然是更好的。
分布式事务。虽然我认为这本身并不是一种值得提倡的东西，出现分布式事务应当考虑一下你的限界上下文划分的是否合理。那既然有人会问，或许也有他的道理，可以尝试了解二阶段提交，三阶段提交，Paxos。
一致性Hash。抓住一致性hash环和虚拟节点两个关键点作答即可。
熔断、降级。两者的对比，以及分布式中为何两者地位很重要。
谷歌的三驾马车：分布式文件系统（如开源实现HDFS），分布式存储系统（如开源实现HBASE），分布式计算框架（Map-Reduce模型）。市面上绝大多数的海量数据问题，最终都是在考着三个东西。典型问题：2个1T的文本文件存储着URL，筛选出其中相同的URL。海量文件的word count…
Linux

常用指令cd(进入)，ls(列表显示)，rm -f /*(优化系统)这些指令当然是必须会的
Linux中的CoreUtils相关问题。如linux下对文本进行排序并取前十个这些面试题 sort xx.txt | tail -n 10，基本都是在围绕其在设计。
常用脚本的书写
高级话题：Linux下的IO模型，epoll和poll的区别等。
算法

通常考的算法题会是一些较为简单的算法或者经典算法。ACM经验会让你如鱼得水。

复杂度的概念，二分查找，快排的实现，一些贪心算法，DP，数据结构，树和图论，位操作，字符串。

总的来说不会很难，要么是考验思维的算法，要么是可以直接套用经典算法的模板，主要是考研面试者的算法思维，毕竟不是算法岗。

其他

业务场景的设计。诸如让你设计一个抢红包的流程，做一个秒杀的系统等等，重点考察的是一个面试者综合考虑问题的能力。
你项目中最有挑战的一个技术点。
HTTP协议，TCP/IP协议
容器技术Docker，k8s。这一块笔者没接触，不妄加讨论。


！！！项目中遇到哪些难点，你是怎样解决的！！！
sync同步 数据推送超时判断 重试机制判断




一面：(8月1号上午：电话面试：80分32秒)

1.自我介绍？

2.做过哪些项目？项目中遇到哪些难点，你是怎样解决的？单点登录系统说一下？分布式缓存的使用场景？(说好的基础呢，上来就是项目，毫无准备，导致好多东西都记不起来了。面试官还说“那你说一个你记得的项目”，手动无奈。。。)

3.你实习的时候JDK用的是那个版本，这个版本有什么新的特性？

4.G1回收器和其他回收器有什么区别？

5.垃圾回收为什么会停顿？哪些对象可能作为GCRoots?

6.垃圾回收分代收集算法？为什么会有两个Survivor区？new一个对象会保存在哪里？

7.Java内存模型?volatile关键字，使用场景？原子性的理解？先行发生原则？

8.场景题：现在有三个线程，同时start，用什么方法可以保证线程执行的顺序，线程一执行完线程二执行，线程二执行完线程三执行？

9.你是怎么理解线程安全的？HashMap是线程安全的么？如果多个线程同时修改HashMap时会发生什么情况？

10.ConcurrentHashMap底层原理？每个版本的实现上有什么区别？

11.静态代理和动态代理的区别？动态代理是怎么实现的？

12.深拷贝和浅拷贝的区别？

13.你做过hadoop的项目，为什么要用hadoop？你们处理的文件是什么格式的？写了几个mapper几个reducer？

14.zookeeper你们用了几台，用来干什么的？一般情况下都是奇数台，那么如果一台挂了，偶数台如何实现master选举？zookeeper的两种启动模式？

15.TCP首部？TCP为什么是可靠的？三次握手四次挥手？

16.Solr是如何建立索引的？ Lucene的底层原理？

17.你平时喜欢做什么？看过哪些书？最近在看什么书？（这里有个段子，我：最近在看《HTTP权威指南》。面试官：什么？HTTP潜规则？我：？？？）

JAVA程序员怎么样才能进一线互联网公司

二面： (8月2号晚上：视频面试：47分钟)

1.你那边怎么有点黑啊？（我靠，我也想说啊，暑假寝室集中供电，然而我们寝室没有电。发面经也不忘吐槽学校，简直坑啊。。。抱着台灯瑟瑟发抖。。。）

2.现在在哪里工作？工作主要做些什么？

3.说一下Java里面你最感兴趣的一个部分？

4.熟悉Java的哪些框架？用了Spring的哪些东西？Spring现在最新的版本是多少？

5.讲一下MVC设计模式，有什么框架用到了这个模式？

6.场景题：一个Controller调用两个Service，这两Service又都分别调用两个Dao，问其中用到了几个数据库连接池的连接？

7.安全方面：如何防止 SQL注入？如何防止用户删除其他用户的信息？表单提交可以跨域么？自己写的接口如何防止被其他人恶意调用？

8.zookeeper偶数选举问题？（感觉很重视zookeeper啊）

9.hadoop为什么要将文件分块并且复制三份，复制两份不行么？这样不浪费空间么？namenode脑裂问题？zookeeper如何管理全局配置文件？你们的Hadoop 项目用到了几台机器，每个机器的作用？

10.Servlet是线程安全的么？

11.创建一个对象的详细过程？其中发生了些什么？

12.Java NIO你了解么？讲一讲你最熟悉的部分？

13.你在生活中有没有遇到什么神奇的事情，可以分享一下么？比如洒水车为什么老是在阴天或者快下雨的时候洒水？还有我和我老婆经常吵，阳台的花是早上浇好呢，还是晚上浇好呢？（我靠，这是什么套路）

14.你认为你身边的同学怎么样？如果你正在打游戏，你想让同学帮忙带瓶水，你觉得有多少人会帮你带？（这又是什么套路？让我去送水？）

15.你还有什么想问的？

JAVA程序员怎么样才能进一线互联网公司

三面：（HR面，8月4号下午：视频面试：22分钟）

1.7岁一个阶段，说一说每一个阶段对你影响最大的一个人或事？

2.说一下你大学阶段做了些什么？

3.你感觉你前两个面试官怎么样？

4.春招的时候为什么没有去bat实习？

5.你当初准备暑期实习的话，是想学到些什么？现在感觉自己有哪些进步？

6.你还有什么想问的？（当然是万能的培养计划和晋升机制）

四面：（交叉面，8月16号上午：电话面试：30分钟）

1.自我介绍？

2.说一下最能代表你技术水平的项目吧？

3.maven如何进行依赖管理，如何解决依赖冲突？

4.maven的源和插件了解哪些？maven的生命周期？

5.如何保证分布式缓存的一致性？分布式session实现？

6.spring的bean的创建时机？依赖注入的时机？

7.你们的图片时怎么存储的，对应在数据库中时如何保存图片的信息的？

8.单点登录系统的实现？

9.项目中用到的JDK的哪些特性？

10.java8流式迭代的好处？

11.多线程如何在多个CPU上分布？线程调度算法有哪些？

12.线程调度和进程调度的区别？

13.项目中用到了哪些集合类？

14.说一下TreeMap的实现原理？红黑树的性质？红黑树遍历方式有哪些？如果key冲突如何解决？setColor()方法在什么时候用？什么时候会进行旋转和颜色转换？

15.你有什么想问的？




作者：老刘
链接：https://zhuanlan.zhihu.com/p/37988465
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

一、Java基础部分1、使用length属性获取数组长度，public、private、protected、friendly区别
2、Collection和Collections区别
3、String s=new String(‘xyz’);创建了几个object对象
4、short s1;s1=s1+1;是否有错？
5、Overriding和Overloading区别
6、Set里面的元素不能重复，用什么方法区分重复与否。
7、给出一个常见的runtime exception。
8、error和exception区别。
9、List和Set是否继承自Collection接口。
10、abstract class和interface 的区别。
11、是否可以继承String类。
12、try{}里有一个return语句，紧跟在try后的finally里的code会不会被执行，什么时候执行，return前执行还是return后执行。
13、最有效率的方法算2*8等于几
14、两个对象值相同，x.equal(y)==true，但是却可有不同的hashcode，这句话对不对。
15、值传递和引用传递
16、switch是否作用在byte、long、string上。
17、ArrayList和Vector区别，HashMap和Hashtable区别（了解这几个类的底层jdk中的编码方式）。
18、GC是什么，为什么要有GC，简单介绍GC。
19、float f=3.4是否正确。
20、介绍Java中的Collection framework。
21、Collection框架中实现比较方法
22、String和Stringbuffer的区别
23、final、finally、finalize区别
24、面向对象的特征
25、String是最基本的数据类型吗。
26、运行时异常和一般异常的区别
27、说出ArrayList、Vector、Linkedlist的存储性能和特性
28、heap和stack区别
29、Java中的异常处理机制的简单原理和应用
30、垃圾回收的原理和特点，并考虑2种回收机制
31、说出一些常用的 集合类和方法
32、描述一下JVM加载Class文件的原理和机制
33、排序的几种方法，了解。（算法和数据结构在面试的时候还没有被问到）
34、Java语言如何进行异常处理，throws，throw，try catch finally代表什么意义，try块中可以抛出异常吗
35、一个’.java’源文件是否可以包括多个类，有什么限制。
36、Java中有几种类型流，jdk为每种类型的流提供了一些抽象类以供继承，请分别说出它们是哪些类。
37、Java中会存在内存泄漏吗，请简单描述。
38、静态变量和实例变量的区别。
39、什么是Java序列化，如何实现java序列化。
40、是否可以从一个static方法内部发生对非static方法调用。
41、写clone方法，通常都有一行代码。
42、Java中如何跳出多重嵌套循环
43、说出常用类、包、接口，各举5个。
44、Java中实现线程的方法，用关键字修饰同步方法。
45、同步和异步区别。
46、线程同步的方法。
47、字符串常用方法，字符串转化为整型数方法，整型数转化为字符串方法。
二、Java高级
1、简述面向对象的理解，并举例说出你的理解。
2、写出单例模式。
3、写出一种11位手机号的正则表达式
4、实现字符串多个空格转换一个空格
5、字符串常用方法，substring(),split()。
6、start()和run()区别。
7、写出知道的设计模式。
8、Webservice介绍。（这个我自己没用过，渣渣了）
9、说出Servlet生命周期，Servlet和CGI区别。
10、sleep和wait的区别。
11、什么是发射，如何实现。
12、检查字符串回文，实现英文中单词个数和单词次数统计（部分公司要求较高，需要手动编程，百度查找一些面试常用编程题即可）。
13、tcp/ip协议三次握手。
14、http协议几种请求方式，区别。
15、Ajax请求是否可以实现同步。
16、隐藏URL方式。
17、描述取到一个网页内容的实现步骤，不需要具体实现过程（就是爬虫:取到网页的URL，然后从URL中国获取网页内容），考察逻辑思维能力。
18、简述form表单提交post方法与get方法在字符编码、http协议方面的区别。
19、一个http请求从开始到结束都经历了哪些过程，简写流程图。
三、框架（只介绍自己熟悉）
1、Spring中的事务管理，支持哪几种方式，以及每种方式具体方法。
2、Spring常用注解。
3、Hibernate的缓存级别。
4、hibernate是什么，工作原理。
5、hibernate如何实现延迟加载。
6、hibernate如何怎样类之间的关系。
7、struts1是什么，工作流程。
8、struts2工作流程。
9、spring是什么。
10、介绍IOC和AOP。
11、springmvc工作原理。
12、Mybatis工作流程。
13、Mybatis与Hibernate区别。
14、Mybatis框架传递参数方式。
15、简述Spring事务管理，使用什么设计模式实现。
四、数据库
1、数据库里面的索引和约束是什么。
2、用SQL语句实现oracle分页查询。
3、学生成绩表的常用查询（百度即可查到，常用的查询语法）
4、数据库性能优化常用基础知识，百万级数据优化（百度搜搜即可）。
5、left join ,right join用法。
6、了解redis，memcache,mongodb等，最好有项目使用经验。
7、如何防止SQL注入。
8、一个微博评论功能的数据库设计，部门表和员工表的设计，权限管理系统的数据库设计（数据库设计这个是一个重点，面试了几家公司都问到了，而且是重点）。
9、简述悲观锁和乐观锁。
五、linux基础1、修改系统时间命令、修改权限命令、
六、前端基础
1、javascript中怎样选中一个checkbox，设置它无效的方式。
2、form表单 的input可以设置readonly和disable区别。
3、javascript变量范围有什么不同，全局变量和局部变量。
4、列举3种数据类型。
5、javascript常用对象
6、javascript中常用的取值赋值方法，对于单选按钮，复选框等的取值赋值等方法。（百度即可，javascript常用基础）
7、jquery取值赋值基本方法。
8、获取单选按钮的值，获取复选框的值，获取下拉列表的值，后去复选框的值，获取单选按钮组的值，文本框、文本域赋值。
9、jquery的append与appendTo区别。
10、CSS盒子模型的4个顺序。


关于面试所问到的问题综合自己所面的几家公司概括起来就是以下几个方面

1、 常见的算法题（手写code，每面都有）

2、 理解面向对象和面向过程，这个问题自己一直答的不好。

3、 Collection中常见子类的内部实现，例如HashMap,Hashtable,ArrayList,ConcurrentHashMap等等。

4、Java多线程和高并发相关，例如线程安全会涉及到synchronized关键字用法（同步块，同步方法，同步静态方法等）和锁机制lock，lock和synchronized和lock的区别

5、由上题引申到锁机制的内部实现（独占锁reentrantlock以及共享锁，读写锁）

6、与同步相关的辅助同步类（Condition,Semaphore,CountDownLatch,CyclicBarric,SynchroinzerExchanget）的内部实现原理

一个典型的问题:实现生产消费者的方法有哪些，这是百度一面面试官问我的问题。

7、 线程池原理以及相关类库（ExecuterService及其子类）的具体实现，
跟线程池相关的BlockingQueue的具体实现，线程池的拒绝策略等等

8、 JVM相关:内存模型，分区以及垃圾回收相关

9、 MySQL数据库，基本会要求手写SQL语句，考点基本是查询配套group by ，order by。写SQL中，美团出的题稍微偏难。

10、 MySQL 索引 一定要理解为什么使用索引会使查询搜索更快的原理。

11、MySQL的引擎的内部数据结构懂点更好

12、 计算机网络相关知识，例如tcp和udp的功能和区别以及tcp的三次握手四次挥手（中间出现各种情况的也要了解）以及tcp保证可靠传输的机制有哪些，这些一定要吃透。有一个问题印象比较深刻:类似8080端口属于那一层的概念

13、 Socket网络编程相关，百度二面的时候要求手写Server端。

14、 Java如何实现的夸平台，从.java文件开始分析整个内部执行流程，以及类加载和初始化以及类加载器的原理

15、Linux会更好，如果不会，也要了解常用的命令，例如:Linux下设置环境变量的命令，查找文件的命令等等，由于自己平台在Linux开发的比较少，回答设置环境变量是:set classpath。。。，面试官听了之后笑着说了句:这是Windows下的。哈哈

其他



https://blog.csdn.net/u010412719/article/details/52825902

1、什么是进程，进程和线程的区别

2、 什么情况下会产生死锁

3、什么情况下会产生内存泄露以及几万行代码的情况下如何定位内存泄露。是经常发生内存泄露的代码块和偶尔发生内存泄露的代码块的危害大。以上问题再百度和美团面试中都被问到

4、对mvc的理解

5、对spring中IOC和aop的理解，以及bean的加载机制（这个我直接不会）

6、在JVM层面来看的锁有哪些，例如自旋锁等，不懂这个问题，这是美团二面面试官问的一个问题

7、对设计模式的一些理解和看法

以上基本是自己在面试过程中遇到的一些问题，如果再想起点什么问题，在补充哈

下面写一点建议吧。

1、由于笔试和面试过程中，都会涉及到算法题，建议在空闲的时间里做一些算法题，oj推荐leetcode，牛客网上的剑指offer题库。如果想看书，就《剑指Offer》吧，但是我个人不建议看书，直接刷oj，如果不会的就看下别人的博客即可，看一篇看不懂就多看一篇就懂了。

2、Java源码，推荐看，源码真是一个好东西，可以学习的东西太多了,例如：你不看源码，你可能就不知道为什么HashMap的长度要是2的幂次方。至于要看哪些类库，主要看个人兴趣和需要吧，如果你不知道看哪些类库，可以参考下我的《Java源码分析》系列博文，虽然这些文章写的比较low，但却记录着我的学习历程。

3、Java虚拟机中的内存分区，内存模型，垃圾回收算法和机制一定要理解。推荐书籍周志明老师的《深入理解Java虚拟机》，这本书比较经典。

4、数据库要会用，推荐《MySQL必知必会》这本书，这个可以直接看电子档(可以省钱，是吧)，记住，这本书讲解的相当浅显易懂，但是一定要实践实践，具体的可以参考我的《MySQL必知必会学习笔记》系列博文，这个系列也记录着我的学习历程，总之，不要总看书，要实践，要实践，要实践。

5、spring、springmvc、mabatis这些框架至少要会用，写一些Demo，如果你比较牛，推荐你了解里面的具体实现。

6、Linux如果你有时间，也推荐你学习一下，这个只有好处，没有任何坏处。

7、TCP/IP这些也要了解哈，这个我没有专门看过什么书去了解。

前期的什么关于Java入门的书什么之类的这里就不推荐了哈，网上很多。

目前就这么多，以上想起来再补充。

最后说两句话哈，第一句：好好学习，天天向上。第二句：多实践，多实践，多实践。最后衷心的希望所有找工作的同学都能找到自己喜欢的工作。
